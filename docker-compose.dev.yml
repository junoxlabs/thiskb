
# Define common volumes using an extension field
x-app-volumes: &app-volumes
  - ./thiskb:/app/thiskb
  - ./documents:/app/documents
  - ./knowledge_bases:/app/knowledge_bases
  - ./templates:/app/templates
  - ./users:/app/users
  - ./tenants:/app/tenants
  - ./dashboard:/app/dashboard

services:
  web:
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes: *app-volumes
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
      - mailhog
    environment:
      - DEBUG=true 
      - DATABASE_URL=postgres://postgres:password@db:5432/thiskb
      - RUN_MIGRATION=true
      - CELERY_BROKER_URL=amqp://kb-user:strongpassword123@rabbitmq:5672/kb-vhost
      - S3_BUCKET=thiskb
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      # Email configuration
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_HOST_USER=
      - EMAIL_HOST_PASSWORD=
      - EMAIL_USE_TLS=False
      - DEFAULT_FROM_EMAIL=noreply@thiskb.local
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - thiskb_network

  celery:
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes: *app-volumes
    depends_on:
      - db
      - web
      - rabbitmq
      - minio
      - mailhog
    environment:
      - DEBUG=true 
      - DATABASE_URL=postgres://postgres:password@db:5432/thiskb
      - CELERY_BROKER_URL=amqp://kb-user:strongpassword123@rabbitmq:5672/kb-vhost
      - S3_BUCKET=thiskb
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      # Email configuration
      - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_HOST_USER=
      - EMAIL_HOST_PASSWORD=
      - EMAIL_USE_TLS=False
      - DEFAULT_FROM_EMAIL=noreply@thiskb.local
    command: celery -A thiskb worker --loglevel=info
    networks:
      - thiskb_network

  # celery-beat:
  #   build:
  #     context: .
  #     dockerfile: dev.Dockerfile
  #   volumes: *app-volumes
  #   depends_on:
  #     - web
  #     - rabbitmq
  #   environment:
  #     - DATABASE_URL=postgres://postgres:postgres@db:5432/thiskb
  #     - CELERY_BROKER_URL=amqp://kb-user:strongpassword123@rabbitmq:5672/kb-vhost
  #     - S3_BUCKET=thiskb
  #     - S3_ENDPOINT=http://minio:9000
  #     - S3_ACCESS_KEY=minioadmin
  #     - S3_SECRET_KEY=minioadmin
  #   command: uv run celery -A thiskb beat --loglevel=info
  #   networks:
  #     - thiskb_network

  db:
    image: paradedb/paradedb:0.15.10
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=thiskb
    # ports:
      # - "5432:5432"
    networks:
      - thiskb_network

  # redis:
  #   image: valkey/valkey:8-alpine
  #   # ports:
  #   #   - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - thiskb_network

  rabbitmq:
    image: rabbitmq:4-management-alpine
    environment:
      RABBITMQ_DEFAULT_VHOST: kb-vhost
      RABBITMQ_DEFAULT_USER: kb-user
      RABBITMQ_DEFAULT_PASS: strongpassword123
    ports:
      # - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - thiskb_network

  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    networks:
      - thiskb_network

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/thiskb;
      /usr/bin/mc policy set public myminio/thiskb;
      exit 0;
      "
    networks:
      - thiskb_network

  mailhog:
    image: mailhog/mailhog
    ports:
      # - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    networks:
      - thiskb_network

networks:
  thiskb_network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
  minio_data:
